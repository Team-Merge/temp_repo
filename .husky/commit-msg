#!/usr/bin/env sh

# 커밋 메시지를 저장한 파일을 변수에 저장
message="$(cat "$1")"

# 정규 표현식을 사용하여 메시지 검사
# Header: 타입(스코프): 주제
headerPattern="^(feat|fix|build|chore|ci|docs|style|refactor|test|perf)(\([^\)]+\))?:\s?.{0,50}$"
# Body: 상세 설명 (선택적)
bodyPattern="^(|\s.{1,})$"
# Footer: 참조 정보 (선택적)
footerPattern="^(|\sIssues #[0-9]+)$"

# 메시지를 빈 행으로 나누기
IFS="\n\n" read -r header body footer <<EOF
$message
EOF

# Header 검증
if ! [[ $header =~ $headerPattern ]]; then
  echo "=========================================================================="
  echo "======================   🚨 WRONG COMMIT MESSAGE!   ======================"
  echo "=========================================================================="
  echo "== Header Format should be => 타입(스코프): 주제                       =="
  echo "== Allowed Types: feat, fix, build, chore, ci, docs, style, refactor, test, perf =="
  echo "== EXAMPLE => feat: 로그인 기능 추가                                   =="
  echo "==            feat(auth): 사용자 인증 기능 추가                        =="
  echo "=========================================================================="
  exit 1
fi

# Body 검증 (생략 가능하지만 있다면 조건 만족해야 함)
if [ -n "$body" ] && ! [[ $body =~ $bodyPattern ]]; then
  echo "=========================================================================="
  echo "======================   🚨 WRONG BODY FORMAT!    ========================"
  echo "=========================================================================="
  echo "== Body should provide detailed information (optional)                 =="
  echo "=========================================================================="
  exit 1
fi

# Footer 검증 (생략 가능하지만 있다면 조건 만족해야 함)
if [ -n "$footer" ] && ! [[ $footer =~ $footerPattern ]]; then
  echo "=========================================================================="
  echo "======================   🚨 WRONG FOOTER FORMAT!  ========================"
  echo "=========================================================================="
  echo "== Footer should reference issues in the format: Issues #1234          =="
  echo "=========================================================================="
  exit 1
fi

# 성공 메시지 출력
echo "=========================================================================="
echo "=======================      COMMIT CREATED!!      ======================="
echo "=========================================================================="
